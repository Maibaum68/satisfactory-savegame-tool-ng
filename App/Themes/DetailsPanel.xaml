<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SatisfactorySavegameTool"
					xmlns:panels="clr-namespace:SatisfactorySavegameTool.Panels"
					xmlns:details="clr-namespace:SatisfactorySavegameTool.Panels.Details"
					>

	<BooleanToVisibilityConverter x:Key="bool2vis" />


	<Style TargetType="{x:Type details:BoolControl}">
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Margin" Value="0,4,0,4" />
	</Style>

	<Style TargetType="{x:Type details:FloatControl}">
		<Setter Property="Width" Value="100" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="TextAlignment" Value="Right" />
		<Setter Property="Margin" Value="0" />
	</Style>

	<Style TargetType="{x:Type details:ByteControl}">
		<Setter Property="Width" Value="50" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="TextAlignment" Value="Right" />
		<Setter Property="Margin" Value="0" />
	</Style>

	<Style TargetType="{x:Type details:IntControl}">
		<Setter Property="Width" Value="100" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="TextAlignment" Value="Right" />
		<Setter Property="Margin" Value="0" />
	</Style>

	<Style TargetType="{x:Type details:LongControl}">
		<Setter Property="Width" Value="200" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="TextAlignment" Value="Right" />
		<Setter Property="Margin" Value="0" />
	</Style>

	<Style TargetType="{x:Type details:StrControl}">
		<Setter Property="Width" Value="auto" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="TextAlignment" Value="Left" />
		<Setter Property="Margin" Value="0" />
	</Style>

	<Style TargetType="{x:Type details:StringControl}">
		<Setter Property="Width" Value="auto" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="TextAlignment" Value="Left" />
		<Setter Property="Margin" Value="0" />
	</Style>


	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition MinHeight="20" />
			</Grid.RowDefinitions>
			<Border Grid.ColumnSpan="2" CornerRadius="0" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" />
			<Ellipse x:Name="cbtbCircle" Grid.Column="1" Width="19" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center"
					 Fill="Transparent" Stroke="LightGray" StrokeThickness="1" />
			<Path x:Name="cbtbArrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black"
				  Data="M1,0.5 L4.5,4.5 L8,0.5" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="ToggleButton.IsMouseOver" Value="true">
				<Setter TargetName="cbtbCircle" Property="Fill" Value="LightGray" />
				<Setter TargetName="cbtbCircle" Property="Stroke" Value="DarkGray" />
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked" Value="true">
				<Setter TargetName="cbtbArrow" Property="Data" Value="M1,4.5 L4.5,0.5 L8,4.5" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="cbtbCircle" Property="Fill" Value="#EEEEEE" />
				<Setter TargetName="cbtbCircle" Property="Stroke" Value="#AAAAAA" />
				<Setter TargetName="cbtbArrow" Property="Fill" Value="#888888" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
	</ControlTemplate>

	<Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
		<Setter Property="MinWidth" Value="120"/>
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
									  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									  ClickMode="Press" />
						<ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
										  Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left"
										  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
										  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
						<TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}"
								 HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True"
								 Background="Transparent" Foreground="Green" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
						<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"
							   Focusable="False" PopupAnimation="Slide">
							<Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
								  MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder" Background="White" BorderThickness="1" BorderBrush="DarkGray" />
								<ScrollViewer Margin="1,3,1,1" SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
							<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
							<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
						</Trigger>
						<Trigger Property="IsEditable" Value="true">
							<Setter Property="IsTabStop" Value="false"/>
							<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
							<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
		</Style.Triggers>
	</Style>


	<Style TargetType="{x:Type details:ItemCombobox}" BasedOn="{StaticResource {x:Type ComboBox}}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Width" Value="auto" />
		<Setter Property="Height" Value="auto" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,2">
						<Image Width="20" Height="20" Margin="0,0,5,0" Source="{Binding Icon}"
							   Visibility="{Binding HasIcon, Converter={StaticResource bool2vis}}" />
						<TextBlock Width="auto" Height="20" Text="{Binding Label}" VerticalAlignment="Center" />
					</StackPanel>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="ComboBoxItem">
					<Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
					<Style.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="Black" />
							<Setter Property="FontWeight" Value="Medium" />
							<Setter Property="Background">
								<Setter.Value>
									<LinearGradientBrush StartPoint="0,0"  EndPoint="0,1">
										<GradientStop Color="#D0D0D0" Offset="0" />
										<GradientStop Color="White" Offset="1" />
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="AliceBlue" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="listviewitemStretch" TargetType="ListViewItem">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
	</Style>

</ResourceDictionary>